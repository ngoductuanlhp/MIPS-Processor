module Two_Complement(out, data);
	output [31:0]out;
	input [31:0]data;
	
	wire [31:0]one_complement;

	assign one_complement = ~data;
	
	Adder_32bit adder(out, overflow, one_complement, 32'd1);
	
endmodule 

`timescale 1ns/1ns
module Test_Two_Complement();
	reg [31:0]data;
	wire [31:0]out;
	
	Two_Complement m(out, data);

	initial begin 
data=32'd5;
#20 data=32'd1;
#20 data=32'd0;
#20 data=32'd2147483653;
end
endmodule